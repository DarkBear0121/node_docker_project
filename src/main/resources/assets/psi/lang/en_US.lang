# MISC
itemGroup.Psi=Psi

psimisc.componentType=&aComponent Type&7: %s
psimisc.shiftForInfo=&7Hold &bSHIFT&7 for more info
psimisc.none=(none)
psimisc.stats=Stats
psimisc.socketing=Socketing
psimisc.keybind=Psi Master Keybind
psimisc.spellSelected=&dSpell Selected&7: %s
psimisc.name=Name:
psimisc.compiled=Compilation Successful
psimisc.errored=Compilation Errored
psimisc.weakCad=Your CAD's Stats are too weak to cast this Spell.
psimisc.constant=Constant
psimisc.nextPage=Next Page
psimisc.prevPage=Previous Page
psimisc.config=Config
psimisc.notYourProgrammer=It seems like someone else is using this. Probably better not to mess with it. 
psimisc.cantUseProgrammer=You have no idea how to operate this.
psimisc.levelDisplay=Level %d
psimisc.levelInfo=Level %d - Level Points: %d
psimisc.levelInfoCreative=Level %d (Creative) - Level Points: %d
psimisc.locked=Locked
psimisc.requirements=Requirements
psimisc.learn=Learn

# BLOCK NAMES
tile.psi:cadAssembler.name=CAD Assembler
tile.psi:programmer.name=Spell Programmer

# ITEM NAMES
item.psi:psidust.name=Psidust
item.psi:psimetal.name=Psimetal Ingot
item.psi:psigem.name=Psigem
item.psi:cad.name=Casting Assistant Device
item.psi:cadAssemblyIron.name=Iron CAD Assembly
item.psi:cadAssemblyGold.name=Gold CAD Assembly
item.psi:cadAssemblyPsimetal.name=Psimetal CAD Assembly
item.psi:cadCoreBasic.name=Basic CAD Core
item.psi:cadCoreOverclocked.name=Overclocked CAD Core
item.psi:cadCoreConductive.name=Conductive CAD Core
item.psi:cadCoreHyperclocked.name=Hyperclocked CAD Core
item.psi:cadCoreRadiative.name=Radiative CAD Core
item.psi:cadSocketBasic.name=Basic CAD Socket
item.psi:cadSocketSignaling.name=Signaling CAD Socket
item.psi:cadSocketLarge.name=Large CAD Socket
item.psi:cadSocketTransmissive.name=Transmissive CAD Socket
item.psi:cadSocketHuge.name=Huge CAD Socket
item.psi:cadBatteryBasic.name=Basic CAD Battery
item.psi:cadBatteryExtended.name=Extended CAD Battery
item.psi:cadBatteryUltradense.name=Ultradense CAD Battery
item.psi:cadColorizerWhite.name=White CAD Colorizer
item.psi:cadColorizerOrange.name=Orange CAD Colorizer
item.psi:cadColorizerMagenta.name=Magenta CAD Colorizer
item.psi:cadColorizerLightBlue.name=Light Blue CAD Colorizer
item.psi:cadColorizerYellow.name=Yellow CAD Colorizer
item.psi:cadColorizerLime.name=Lime CAD Colorizer
item.psi:cadColorizerPink.name=Pink CAD Colorizer
item.psi:cadColorizerGray.name=Gray CAD Colorizer
item.psi:cadColorizerSilver.name=Light Gray CAD Colorizer
item.psi:cadColorizerCyan.name=Cyan CAD Colorizer
item.psi:cadColorizerPurple.name=Purple CAD Colorizer
item.psi:cadColorizerBlue.name=Blue CAD Colorizer
item.psi:cadColorizerBrown.name=Brown CAD Colorizer
item.psi:cadColorizerGreen.name=Green CAD Colorizer
item.psi:cadColorizerRed.name=Red CAD Colorizer
item.psi:cadColorizerBlack.name=Black CAD Colorizer
item.psi:cadColorizerRainbow.name=Full-Spectrum CAD Colorizer
item.psi:cadColorizerGolden.name=Golden CAD Colorizer
item.psi:spellBullet.name=Spell Bullet
item.psi:spellBulletActive.name=Programmed Spell Bullet
item.psi:spellBulletProjectile.name=Projectile Spell Bullet
item.psi:spellBulletProjectileActive.name=Programmed Projectile Spell Bullet
item.psi:spellBulletLoop.name=Loopcast Spell Bullet
item.psi:spellBulletLoopActive.name=Programmed Loopcast Spell Bullet

# DEATH MESSAGES
death.attack.psi-overload=%s overflowed their Psionic Energy

# COMPONENT NAMES
psi.component.assembly=Assembly
psi.component.core=Core
psi.component.socket=Socket
psi.component.battery=Battery
psi.component.dye=Colorizer

# CAD STAT NAMES
psi.cadstat.efficiency=Efficiency
psi.cadstat.potency=Potency
psi.cadstat.complexity=Complexity
psi.cadstat.projection=Projection
psi.cadstat.bandwidth=Bandwidth
psi.cadstat.sockets=Sockets
psi.cadstat.overflow=Overflow

# SPELL STAT NAMES
psi.spellstat.complexity=Complexity
psi.spellstat.complexity.desc=Amount of actions
psi.spellstat.potency=Potency
psi.spellstat.potency.desc=Power of the spell
psi.spellstat.cost=Cost
psi.spellstat.cost.desc=Psi cost on casting
psi.spellstat.projection=Projection
psi.spellstat.projection.desc=Amount of tricks
psi.spellstat.bandwidth=Bandwidth
psi.spellstat.bandwidth.desc=Spell width or height (largest)

# SPELl PIECE NAMES
# -- SELECTORS
psi.spellpiece.selectorCaster=Selector: Caster
psi.spellpiece.selectorCaster.desc=Selects the person casting the spell
psi.spellpiece.selectorFocalPoint=Selector: Focal Point
psi.spellpiece.selectorFocalPoint.desc=Selects the focal point Entity of this spell
psi.spellpiece.selectorNearbyItems=Selector: Nearby Items
psi.spellpiece.selectorNearbyItems.desc=Selects items near the given position
psi.spellpiece.selectorNearbyLiving=Selector: Nearby Living
psi.spellpiece.selectorNearbyLiving.desc=Selects living beings near the given position
psi.spellpiece.selectorNearbyEnemies=Selector: Nearby Enemies
psi.spellpiece.selectorNearbyEnemies.desc=Selects enemies near the given position
psi.spellpiece.selectorNearbyAnimals=Selector: Nearby Animals
psi.spellpiece.selectorNearbyAnimals.desc=Selects animals near the given position

# -- OPERATORS
psi.spellpiece.operatorSum=Operator: Sum
psi.spellpiece.operatorSum.desc=A + B (+ C)
psi.spellpiece.operatorSubtract=Operator: Subtract
psi.spellpiece.operatorSubtract.desc=A - B (- C)
psi.spellpiece.operatorMultiply=Operator: Multiply
psi.spellpiece.operatorMultiply.desc=A * B (* C)
psi.spellpiece.operatorDivide=Operator: Divide
psi.spellpiece.operatorDivide.desc=A / B
psi.spellpiece.operatorAbsolute=Operator: Absolute
psi.spellpiece.operatorAbsolute.desc=Calculates the absolute value of a number
psi.spellpiece.operatorInverse=Operator: Inverse
psi.spellpiece.operatorInverse.desc=Calculates a number's inverse

psi.spellpiece.operatorEntityPosition=Operator: Entity Position
psi.spellpiece.operatorEntityPosition.desc=Gets an Entity's position
psi.spellpiece.operatorEntityLook=Operator: Entity Look
psi.spellpiece.operatorEntityLook.desc=Gets an Entity's look vector
psi.spellpiece.operatorEntityMotion=Operator: Entity Motion
psi.spellpiece.operatorEntityMotion.desc=Gets an Entity's motion vector
psi.spellpiece.operatorVectorRaycast=Operator: Vector Raycast
psi.spellpiece.operatorVectorRaycast.desc=Gets a localized raycast's result (max 32)
psi.spellpiece.operatorVectorSum=Operator: Vector Sum
psi.spellpiece.operatorVectorSum.desc=A + B (+ C)
psi.spellpiece.operatorVectorSubtract=Operator: Vector Subtract
psi.spellpiece.operatorVectorSubtract.desc=A - B (- C)
psi.spellpiece.operatorVectorMultiply=Operator: Vector Multiply
psi.spellpiece.operatorVectorMultiply.desc=A * B
psi.spellpiece.operatorVectorDivide=Operator: Vector Divide
psi.spellpiece.operatorVectorDivide.desc=A / B
psi.spellpiece.operatorVectorCrossProduct=Operator: Vector Cross Product
psi.spellpiece.operatorVectorCrossProduct.desc=A x B
psi.spellpiece.operatorVectorNormalize=Operator: Vector Normalize
psi.spellpiece.operatorVectorNormalize.desc=Normalizes a Vector so its magnitude is 1
psi.spellpiece.operatorVectorNegate=Operator: Vector Negate
psi.spellpiece.operatorVectorNegate.desc=Negates a vector
psi.spellpiece.operatorVectorMagnitude=Operator: Vector Magnitude
psi.spellpiece.operatorVectorMagnitude.desc=Gets a vector's Magnitude
psi.spellpiece.operatorVectorConstruct=Operator: Vector Construct
psi.spellpiece.operatorVectorConstruct.desc=Constructs a Vector from XYZ parameters
psi.spellpiece.operatorVectorExtractX=Operator: Vector Extract X
psi.spellpiece.operatorVectorExtractX.desc=Extracts the X coordinate from a Vector
psi.spellpiece.operatorVectorExtractY=Operator: Vector Extract Y
psi.spellpiece.operatorVectorExtractY.desc=Extracts the Y coordinate from a Vector
psi.spellpiece.operatorVectorExtractZ=Operator: Vector Extract Z
psi.spellpiece.operatorVectorExtractZ.desc=Extracts the Z coordinate from a Vector
psi.spellpiece.operatorClosestToPoint=Operator: Closest to Point
psi.spellpiece.operatorClosestToPoint.desc=Gets the closest entity in a list to a point 
psi.spellpiece.operatorRandomEntity=Operator: Random Entity
psi.spellpiece.operatorRandomEntity.desc=Gets a random entity from a list

# -- CONSTANTS
psi.spellpiece.constantNumber=Constant: Number
psi.spellpiece.constantNumber.desc=Select and type to set value

# -- CONNECTORS
psi.spellpiece.connector=Connector
psi.spellpiece.connector.desc=Connects stuff and things

# -- TRICKS
psi.spellpiece.trickDebug=Trick: Debug
psi.spellpiece.trickDebug.desc=For testing. Prints out the target
psi.spellpiece.trickAddMotion=Trick: Add Motion
psi.spellpiece.trickAddMotion.desc=Adds motion to target Entity
psi.spellpiece.trickExplode=Trick: Explode
psi.spellpiece.trickExplode.desc=Goes boom

# SPELL PARAMETER NAMES
psi.spellparam.target=Target
psi.spellparam.number=Number
psi.spellparam.number1=Number A
psi.spellparam.number2=Number B
psi.spellparam.number3=Number C
psi.spellparam.number4=Number D
psi.spellparam.vector1=Vector A
psi.spellparam.vector2=Vector B
psi.spellparam.vector3=Vector C
psi.spellparam.vector4=Vector D
psi.spellparam.position=Position
psi.spellparam.ray=Ray
psi.spellparam.max=Max
psi.spellparam.min=Min
psi.spellparam.power=Power
psi.spellparam.direction=Direction
psi.spellparam.speed=Speed
psi.spellparam.x=X
psi.spellparam.y=Y
psi.spellparam.z=Z
psi.spellparam.radius=Radius

# DATA TYPE NAMES
psi.datatype.Null=None
psi.datatype.Any=Any
psi.datatype.Double=Number
psi.datatype.Integer=Number
psi.datatype.Number=Number
psi.datatype.Vector3=Vector
psi.datatype.Entity=Entity
psi.datatype.EntityLiving=Entity (Living)
psi.datatype.EntityPlayer=Entity (Player, Living)
psi.datatype.EntityListWrapper=Entity List

# COMPILER ERRORS
psi.spellerror.nospell=No Spell to compile
psi.spellerror.notricks=Spell has no Tricks
psi.spellerror.unsetparam=A required Parameter is not set
psi.spellerror.nullparam=A Parameter is facing an empty cell
psi.spellerror.invalidparam=A Parameter is facing an invalid piece
psi.spellerror.samesideparams=Two or more Parameters are sharing a side
psi.spellerror.loop=Can't resolve due to endless loop
psi.spellerror.nonpositivevalue=A Number Parameter that needs to be positive isn't

# RUNTIME ERRORS
psi.spellerror.dividebyzero=ERROR: Divide by zero.
psi.spellerror.nulltarget=ERROR: Spell Entity target is non existent.
psi.spellerror.nullvector=ERROR: Spell Operation Vector is non existent or null.
psi.spellerror.outsideradius=ERROR: Spell target is outside maximum 32 block radius.

# PIECE GROUPS
psi.piecegroup.tutorial1=Tutorial 1
psi.piecegroup.tutorial1.desc=Welcome to the leveling menu, it looks like you've gotten acquainted with your brand new CAD. This menu serves as your school for the mod, and this is your first tutorial! Don't worry, this is the longest one, as it has to teach you the basics. To get started programming spells you'll need a Spell Programmer. To run your spells, you'll also need a better CAD than the one you have right now, one with all the components. Look up all the various CAD components (Assembly, Core, Socket, Battery, and optionally, Colorizer) and create one. Spells also need to be put into Spell Bullets. Make yourself all of that stuff and let's get rolling.<br><br>After you're set with all you need. Open up your Spell Programmer by right clicking it. You'll see a large grid. This is where the magic happens. The programming system is less of a traditionally complex programming system, and more of a simple sequence of actions. To add a piece to the grid, right click any part of it, and select from the pieces that come up.<br><br>As you can see at the bottom, you have two available pieces. Once you have more, you'll be able to assemble them to create spells in a myriad of different ways, but for now, let's just focus on these two. The pieces you have available are the "Selector: Caster" and the "Trick: Debug". Tricks are the most important part of a spell, they are the means through which the spell interacts with the world. In our case, the Debug trick is an exception, as it just writes a value to the player's chat.<br><br>Start off by placing them in your grid adjacent to eachother. When you left click on your "Selector: Caster", you'll find that nothing special happens. However, when you do the same for your "Trick: Debug", a panel appears on the left where you can configure the inputs of this piece, the piece's "parameters". Parameters are info that goes to the piece, in order to allow it to do it's thing. Our Debug trick sends out something to chat, so we need to know what that thing is. Take the Target parameter, and click one of the arrows, so that your "Selector: Caster" looks like it's pointing towards the "Trick: Debug". If you hold Shift while looking at a piece, you can see what types of parameters it needs or what type it sends out. This is useful, so you can pair the right pieces together. Ignore the Number parameter for now, we'll cover it later.<br><br>If you've done this correctly, you should see the X on the top turns into a checkmark, and some values appear on the right. Don't worry about those for now. If you're still seeing the red X, hover over it to see what the error is and try to correct it.<br><br>Now we need to take the program you've made and send it over to your CAD. Grab your Spell Bullet and right click your Spell Programmer with it. You'll hear a beep boop, and are now ready to load the bullet. Place your new CAD into your Assembler, into the big slot on the top-left, and you'll see some slots below it open up. Place your bullet in there, then you can take your CAD out. To pick a spell, hold your CAD and hold the same key you use to access this menu.<br><br>In order to level up, you need to create and cast a spell that contains the piece highlighted in red on the last thing you've learned. In our case, we need a spell with a "Trick: Debug" to be able to level up. Right click your CAD with your bullet loaded and you should be ready to move on. If you want to create more Psidust, simply pick a slot that has no bullet in it.
psi.piecegroup.tutorial2=Tutorial 2
psi.piecegroup.tutorial2.desc=Let's talk about the "Number" parameter we saw last time. You'll notice that parameter has an extra option in the center. That means the parameter is optional. By selecting the center, you can disable it.<br><br>In our case, the "Number" parameter is simply a label of sorts, it can be useful if we have a more complex spell where we have multiple things being sent out to chat. It requires a Number, so let's give it one. We now have access to a "Constant: Number" piece. Add the "Number" parameter to your Debug piece and add a "Constant: Number" piece to your grid and connect it to your Debug piece. You can set the number by clicking on the piece and just typing the number with your keyboard.<br><br>Now that we're dealing with multiple parameters, you can assume that in a more complex grid, not everything will be adjacent just as it currently is. That's where Connectors, another piece introduced here, come in. Connectors do exactly as the name says, and allow a piece to connect to another, they're like a wire. You can put a connector adjacent to a piece, and it'll transfer whatever that piece contains to whatever is on the end of the connector. You can make connectors line up with other connectors if what you need is far away. A single connector line can send the object that points to it to any other pieces that are oriented to tap on to it.<br><br>Remember, to level up, you need to make a spell using the piece highlighted in red, so you need to use your "Constant: Number" piece, preferably alongside the Debug trick from Tutorial 1, but give Connectors a try as well, they'll be very important later!
psi.piecegroup.tutorial3=Tutorial 3
psi.piecegroup.tutorial3.desc=Ok, ok. I know what you're thinking. "This is boring, when do we start doing cool stuff?" Well... now!<br><br>It's time we introduce a Trick that actually does some sort of interaction with the world. Bring in "Trick: Add Motion". This trick, as you'd except, adds movement to an entity. It takes an Entity, a Vector and a Number Constant. As you should've figured out already, "Selector: Caster" returns an Entity (Player), which, if you'd use with your new "Trick: Add Motion", you could use it to add movement to your player character. The Vector is the direction in which you want the movement to be added, and the Number Constant is the speed you want to apply. Obviously, you can get this number using "Constant: Number".<br><br>We don't have any great tricks up our sleeve to get a vector for the trick, but we do have "Operator: Entity Look", which gets us a vector corresponding to the direction the player is looking. If we pass that into our "Trick: Add Motion", the player character will move in the direction they're looking. As for the number, go with 3 for now. You can change it of course, but 3 is a good one.You'll notice that when you modify the value of the constant, the numbers on the right change. These numbers are relevant now. They are the stats of your spell. The stats of your spell match up to those of your CAD, and if any of your spell's stats are below the stats of your CAD, you won't be able to cast the spell.<br><br>From the top to bottom, the stats are as follows:<br>&nComplexity&r: The amount of actions your spell has. Constants, connectors and Debug Tricks aren't counted.<br>&nPotency&r: The power of your spell. As you increase the power of your tricks, this goes up.<br>&nCost&r: The amount of Psi (the energy bar on the right of your screen) your spell is going to consume. This doesn't match up to any CAD stat, but is affected by the CAD's Efficiency. The actual value that is consumed is the one inside parenthesis. The higher the Efficiency of your CAD, the less extra you'll have to pay.<br>&nProjection&r: The amount of Tricks in your spell. Debug Tricks aren't counted.<br>&nBandwidth&r: The width or height of your spell, whichever is the highest. If you find you're going over this, try making your spell more compact.
psi.piecegroup.tutorial4=Tutorial 4
psi.piecegroup.tutorial4.desc=Do you like explosions? Of course you do. Let's make a spell that explodes the block the player is looking at.<br><br>For this, we are going to need "Trick: Explode". This takes a Vector and a Number Constant. Similarly to our "Trick: Add Motion", this constant is the power of the trick. The vector is where you want the explosion to happen. We already used "Operator: Entity Look", but that gives us a vector that's very short. If we used that, the explosion would happen in our face! Instead, we want to use an "Operator: Vector Raytrace".<br><br>This operator takes a position and a ray, both Vectors. From the position, which will be the player's position, acquirable through "Operator: Entity Position", the operator extends the "Ray" parameter vector until it collides with a block in the world. Therefore, if we use it alongside "Operator: Entity Look", we can find out where the player is looking at and create our explosion there.One thing we have to keep in mind is the fact that spells are to a range of 32 blocks from their focal point, in our case, the player casting the spell. Our explosion can't be farther than 32 blocks away from the player.<br><br>This will be your last basic tutorial, from here you'll be able to pick between various things to pick as you level up. Have fun!
psi.piecegroup.numbersIntro=Numbers 101
psi.piecegroup.numbersIntro.desc=blarg
psi.piecegroup.vectorsIntro=Vectors 101
psi.piecegroup.vectorsIntro.desc=blarg
psi.piecegroup.entitiesIntro=Entities 101
psi.piecegroup.entitiesIntro.desc=Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas lobortis justo in efficitur iaculis. Curabitur consectetur elementum lectus, quis dictum urna consequat ac. Suspendisse pellentesque turpis nibh, in vulputate ligula accumsan eu. In in erat quam. Proin eu ipsum eget libero vehicula rhoncus. Integer finibus, massa sit amet molestie auctor, turpis massa pellentesque nisi, vitae venenatis libero sem non nisl. Etiam scelerisque nisi magna, vitae iaculis metus molestie a. Fusce nec laoreet dolor, sit amet tempor quam. Integer volutpat ullamcorper massa, eget posuere eros ullamcorper non. Vestibulum lobortis mi sit amet auctor rhoncus. Sed molestie sem eu orci vestibulum pulvinar. Sed porttitor enim non felis pulvinar, id ultricies ligula pellentesque.<br><br>Curabitur viverra a enim in aliquet. Vestibulum ex lorem, dignissim id libero in, feugiat euismod nulla. Aliquam erat volutpat. Quisque convallis velit eu nunc sollicitudin venenatis. Aliquam nec sodales arcu, vitae congue ante. Donec molestie orci velit, sit amet maximus lacus tristique a. Sed eleifend sapien sed sem pharetra, quis dapibus elit maximus. Mauris imperdiet, ligula non tristique aliquet, purus tortor tristique est, in convallis tortor mi sit amet nulla. Nulla facilisi. Praesent pretium porttitor mi gravida scelerisque. Phasellus condimentum facilisis scelerisque. In in odio et urna eleifend efficitur sed sit amet ex. Sed scelerisque suscipit sodales. Cras mauris tortor, gravida non erat non, rhoncus facilisis turpis.<br><br>Nunc cursus malesuada urna et sodales. Praesent egestas pretium eros, ac consequat augue tincidunt a. Mauris sed tellus tellus. Donec in viverra nibh. Nullam metus massa, bibendum sit amet pharetra a, rutrum eget lacus. Cras bibendum libero lectus, a hendrerit dui gravida vitae. Nam tristique rutrum augue facilisis malesuada. Mauris nec erat non diam porttitor condimentum. Proin fermentum nunc sit amet nisl sodales, id aliquam arcu consequat.<br><br>Cras pretium ligula at odio interdum mollis. Praesent dictum dolor at tortor tincidunt posuere. Sed rutrum quam non dictum commodo. Vestibulum porta in lorem nec vulputate. Aenean dapibus dui pretium lacus sollicitudin tempor. Sed varius arcu id sapien placerat cursus. Vivamus ut ultricies eros, eu volutpat dui. Aliquam pulvinar, libero non tempus aliquam, enim dolor commodo lorem, in semper eros augue sit amet augue. Aenean pretium massa eget arcu faucibus porta. Integer consequat urna magna, eget commodo dui faucibus ut.<br><br>Proin pharetra luctus laoreet. Proin malesuada arcu ac accumsan ullamcorper. Duis neque lacus, laoreet sed tortor vel, laoreet euismod nulla. Praesent mattis mi ac erat volutpat fermentum. Donec dolor massa, tempus sed sagittis interdum, faucibus ac leo. Morbi ornare felis ac dui sagittis pretium. Curabitur a augue elit. Fusce blandit scelerisque facilisis. Mauris in auctor sapien, quis facilisis lacus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce fringilla nunc at odio aliquet, vel bibendum lacus sodales. Interdum et malesuada fames ac ante ipsum primis in faucibus. Vivamus sed sagittis eros. Donec nec purus pellentesque, feugiat ligula ut, condimentum lacus. Maecenas interdum ligula eu sem dapibus lacinia.
psi.piecegroup.projectiles=Projectile Casting
psi.piecegroup.projectiles.desc=blarg
